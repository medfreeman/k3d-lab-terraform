deployment:
  podAnnotations:
    prometheus.io/port: "9000"
    prometheus.io/scrape: "true"
# ports:
# traefik:
# port: 9000
# -- Use hostPort if set.
# hostPort: 9000
#
# -- Use hostIP if set. If not set, Kubernetes will default to 0.0.0.0, which
# means it's listening on all your interfaces and all your IPs. You may want
# to set this value if you need traefik to listen on specific interface
# only.
# hostIP: 192.168.100.10

# Defines whether the port is exposed if service.type is LoadBalancer or
# NodePort.
#
# -- You SHOULD NOT expose the traefik port on production deployments.
# If you want to access it from outside your cluster,
# use `kubectl port-forward` or create a secure ingress
# expose:
#  default: false
# -- The exposed port for this service
# exposedPort: 9000
# -- The port protocol (TCP/UDP)
# protocol: TCP
# web:
## -- Enable this entrypoint as a default entrypoint. When a service doesn't explicitly set an entrypoint it will only use this entrypoint.
# asDefault: true
# port: 8000
# hostPort: 8000
# containerPort: 8000
# expose:
#  default: true
# exposedPort: 80
## -- Different target traefik port on the cluster, useful for IP type LB
# targetPort: 80
# The port protocol (TCP/UDP)
# protocol: TCP
# -- Use nodeport if set. This is useful if you have configured Traefik in a
# LoadBalancer.
# nodePort: 32080
# Port Redirections
# Added in 2.2, you can make permanent redirects via entrypoints.
# https://docs.traefik.io/routing/entrypoints/#redirection
# redirectTo:
#   port: websecure
#   (Optional)
#   priority: 10
#
# -- Trust forwarded headers information (X-Forwarded-*).
# forwardedHeaders:
#   trustedIPs: []
#   insecure: false
#
# -- Enable the Proxy Protocol header parsing for the entry point
# proxyProtocol:
#   trustedIPs: []
#   insecure: false
providers:
  kubernetesIngress:
    publishedService:
      enabled: true
priorityClassName: "system-cluster-critical"
# image:
#   repository: "rancher/mirrored-library-traefik"
#   tag: "3.0.1"
tolerations:
  - key: "CriticalAddonsOnly"
    operator: "Exists"
  - key: "node-role.kubernetes.io/control-plane"
    operator: "Exists"
    effect: "NoSchedule"
  - key: "node-role.kubernetes.io/master"
    operator: "Exists"
    effect: "NoSchedule"
service:
  ipFamilyPolicy: "PreferDualStack"
